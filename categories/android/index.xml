<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>android on JustKids</title><link>https://justkids.top/categories/android/</link><description>Recent content in android on JustKids</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 28 Apr 2022 07:08:06 +0800</lastBuildDate><atom:link href="https://justkids.top/categories/android/index.xml" rel="self" type="application/rss+xml"/><item><title>学习Gradel_01_什么是构建工具</title><link>https://justkids.top/posts/pro/gradle/2022_4_gradle_01/</link><pubDate>Thu, 28 Apr 2022 07:08:06 +0800</pubDate><guid>https://justkids.top/posts/pro/gradle/2022_4_gradle_01/</guid><description>&lt;h3 id="什么是构建工具">什么是构建工具&lt;/h3>
&lt;pre tabindex="0">&lt;code>构建工具是从源代码自动创建可执行应用程序的程序（例如，.apk对于 Android 应用程序）。构建将代码编译、链接和打包成可用或可执行的形式。
基本上，构建自动化是编写脚本或自动化软件开发人员在日常活动中执行的各种任务的行为
如：
下载依赖项。
将源代码编译成二进制代码。
打包该二进制代码。
运行测试。
部署到生产系统。
&lt;/code>&lt;/pre>&lt;h3 id="为什么要使用构建工具">为什么要使用构建工具&lt;/h3>
&lt;pre tabindex="0">&lt;code>在小型项目中，开发人员通常会手动调用构建过程。这对于较大的项目是不切实际的，因为很难跟踪需要构建的内容、构建过程中的顺序和依赖关系。使用自动化工具可以使构建过程更加一致。
&lt;/code>&lt;/pre>&lt;h3 id="各种构建工具">各种构建工具&lt;/h3>
&lt;pre tabindex="0">&lt;code>对于 java - Ant、Maven、Gradle。
对于 .NET 框架 - NAnt
c# - MsBuild。
&lt;/code>&lt;/pre>&lt;h3 id="参考资料">参考资料&lt;/h3>
&lt;p>1、 &lt;a class="link" href="https://stackoverflow.com/questions/7249871/what-is-a-build-tool" target="_blank" rel="noopener"
>what art build tool&lt;/a>
2、&lt;a class="link" href="https://en.wikipedia.org/wiki/Build_automation" target="_blank" rel="noopener"
>&lt;/a>
3、&lt;a class="link" href="https://en.wikipedia.org/wiki/List_of_build_automation_software" target="_blank" rel="noopener"
>&lt;/a>&lt;/p></description></item><item><title>学习Gradel_02_基本概念</title><link>https://justkids.top/posts/pro/gradle/2022_4_gradle_02/</link><pubDate>Thu, 28 Apr 2022 07:08:06 +0800</pubDate><guid>https://justkids.top/posts/pro/gradle/2022_4_gradle_02/</guid><description/></item></channel></rss>